{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/global.service.ts","./src/app/common/http-interceptor.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from './common/global.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private global: GlobalService,\n    private router: Router) {\n\n  }\n  ngOnInit() {\n    if (this.global.username) {\n      this.router.navigate(['/']);\n    } else {\n      this.router.navigate(['Login']);\n    }\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { GlobalService } from './common/global.service';\nimport { HttpInterceptorService } from './common/http-interceptor.service';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'Login', component: LoginComponent }\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes, { useHash: true }),\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    GlobalService,\n    { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorService, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GlobalService {\r\n    public username: string = \"\";\r\n    token: string = \"\";\r\n}","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { GlobalService } from './global.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n    constructor(private global: GlobalService) { }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        // We retrieve the token, if any\r\n        const token = this.global.token;\r\n        let newHeaders = req.headers;\r\n        if (token) {\r\n            // If we have a token, we append it to our new headers\r\n            //newHeaders = newHeaders.append('Authorization', 'Bearer ' + token);\r\n        }\r\n        // Finally we have to clone our request with our new headers\r\n        // This is required because HttpRequests are immutable\r\n        const authReq = req.clone({ headers: newHeaders });\r\n        // Then we return an Observable that will run the request\r\n        // or pass it to the next interceptor if any\r\n        return next.handle(authReq);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalService } from '../common/global.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n    templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n    authData = \"\";\r\n    anonymousData = \"\";\r\n    constructor(\r\n        private global: GlobalService,\r\n        private httpClient: HttpClient,\r\n        private router: Router) { }\r\n    ngOnInit() {\r\n        if (this.global.username) { }\r\n        else {\r\n            this.router.navigate(['Login']);\r\n        }\r\n    }\r\n    getauth() {\r\n        var httpOptions = {\r\n            headers: new HttpHeaders({ 'Authorization': 'Bearer ' + this.global.token })\r\n        };\r\n        //JWT\r\n        this.httpClient.get<any>(\"/api/test/authorized\",httpOptions).subscribe(res => {\r\n            if (res) {\r\n                this.authData = res.message;\r\n            }\r\n        })\r\n    }\r\n    getanon() {\r\n        this.httpClient.get<any>(\"/api/test/anonymous\").subscribe(res => {\r\n            if (res) {\r\n                this.anonymousData = res.message;\r\n            }\r\n        })\r\n    }\r\n}","<style>\r\n    \r\n  button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    margin: 8px 0;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n\r\n  button:hover {\r\n    opacity: 0.8;\r\n  }\r\n</style>\r\n\r\nAuthData : {{authData}}\r\n<br>\r\n<button type=\"submit\" (click)=\"getauth()\">Get Auth data</button>\r\n<br><br>\r\nanonymousData : {{anonymousData}}\r\n<br>\r\n<button type=\"submit\" (click)=\"getanon()\">Get anonymous data</button>","import { Component } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { GlobalService } from '../common/global.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n    userName: string = \"\";\r\n    password: string = \"\";\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private global: GlobalService,\r\n        private router: Router) {\r\n\r\n    }\r\n    login() {\r\n        var data = {\r\n            UserName: this.userName,\r\n            Password: this.password\r\n        }\r\n        var httpOptions = {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n        }\r\n        this.httpClient.post<any>(\"/api/auth/login\", data, httpOptions).subscribe(res => {\r\n            if (res) {\r\n                this.global.username = this.userName;\r\n                this.global.token = res.token;\r\n                this.router.navigate(['/']);\r\n            }\r\n        })\r\n    }\r\n}","<style>\r\n  body {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n  }\r\n\r\n  form {\r\n    border: 3px solid #f1f1f1;\r\n  }\r\n\r\n  input[type=text],\r\n  input[type=password] {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    margin: 8px 0;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100%;\r\n  }\r\n\r\n  button:hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .cancelbtn {\r\n    width: auto;\r\n    padding: 10px 18px;\r\n    background-color: #f44336;\r\n  }\r\n\r\n  .container {\r\n    padding: 16px;\r\n  }\r\n\r\n  span.psw {\r\n    float: right;\r\n    padding-top: 16px;\r\n  }\r\n\r\n  /* Change styles for span and cancel button on extra small screens */\r\n  @media screen and (max-width: 300px) {\r\n    span.psw {\r\n      display: block;\r\n      float: none;\r\n    }\r\n\r\n    .cancelbtn {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n\r\n\r\n<form style=\"width: 30%;\">\r\n  <div class=\"container\">\r\n    <label for=\"uname\"><b>Username</b></label>\r\n    <input type=\"text\" placeholder=\"Enter Username\" [(ngModel)]=\"userName\" name=\"uname\" required>\r\n\r\n    <label for=\"psw\"><b>Password</b></label>\r\n    <input type=\"password\" placeholder=\"Enter Password\" [(ngModel)]=\"password\" name=\"psw\" required>\r\n\r\n    <button type=\"submit\" (click)=\"login()\">Login</button>\r\n  </div>\r\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}